[{"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\index.js":"1","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\App.js":"2","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\reportWebVitals.js":"3","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\QuestionsPage.js":"4","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\HobbySelect.js":"5","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\HomePage.js":"6","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\services\\Firestore.js":"7","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\components\\Question.js":"8"},{"size":517,"mtime":1610770318910,"results":"9","hashOfConfig":"10"},{"size":693,"mtime":1610838706181,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1610770318911,"results":"12","hashOfConfig":"10"},{"size":10977,"mtime":1610856517013,"results":"13","hashOfConfig":"10"},{"size":2019,"mtime":1610856595701,"results":"14","hashOfConfig":"10"},{"size":1890,"mtime":1610862051254,"results":"15","hashOfConfig":"10"},{"size":4737,"mtime":1610838706185,"results":"16","hashOfConfig":"10"},{"size":2619,"mtime":1610859509588,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qm9vxs",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\index.js",[],["37","38"],"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\App.js",["39","40","41","42"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport * as Firestore from './services/Firestore';\r\nimport Question from './components/Question';\r\nimport React, {useState} from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport QuestionsPage from './QuestionsPage.js';\r\nimport HomePage from './HomePage.js';\r\nimport './HobbySelect.js';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path = \"/\" component = {HomePage} exact/>\r\n          <Route path = \"/questions\" component = {QuestionsPage}/>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\reportWebVitals.js",[],"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\QuestionsPage.js",[],"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\HobbySelect.js",["43","44","45"],"\r\n\r\nexport const HobbyAlgo = (data) => {\r\n\r\n  //sample data\r\n  let dataset = data;\r\n  \r\n  let clustering = require('density-clustering');\r\n  let kmeans = new clustering.KMEANS();\r\n  // parameters: 3 - number of clusters\r\n  let clusters = kmeans.run(dataset, 3);\r\n  let centroid = getCentroid(clusters, dataset);\r\n  console.log(getCentroid(clusters, dataset))\r\n \r\n  var hobby = getHobby(centroid);\r\n  //console.log(hobby)\r\n  \r\n  return(hobby);\r\n}\r\n\r\nfunction getCentroid(clusters, data) {\r\n  let max = 0;\r\n  let largestCluster = 0;\r\n\r\n  for (let i = 0; i < clusters.length; i++) {\r\n\r\n\r\n    if (clusters[i].length > max) {\r\n      max = clusters[i].length;\r\n      largestCluster = clusters[i];\r\n    }\r\n  }\r\n\r\n  let dim = data[0].length;\r\n  let res = [];\r\n  let pointIndex = largestCluster[0] === 0 ? 0 : largestCluster[0] - 1;\r\n\r\n\r\n  console.log(max)\r\n  for (let i = 0; i < dim; i++) {\r\n    res[i] = 0\r\n    for (let j = pointIndex; j < max + pointIndex; j++) {\r\n      res[i] += data[j][i];\r\n    }\r\n    res[i] /= largestCluster.length;\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\nfunction isEqual(a1, a2) {\r\n  if (a1.length == a2.length) {\r\n    for (let i = 0; i < a1.length; i++) {\r\n      if (a1[i] == a2[i]) {\r\n        continue;\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction getHobby(centroid) {\r\n  let traits = []\r\n  for (let i = 0; i < centroid.length; i++) {\r\n    traits[i] = centroid[i] > 3 ? 1 : 0;\r\n  }\r\n  console.log(`traits are ${traits}`)\r\n  let hobby = ''\r\n  if (isEqual(traits, [1, 1, 0])) {\r\n    return 'Piano'\r\n  }\r\n\r\n  else if (isEqual(traits, [1, 1, 1])) {\r\n    return 'Programming'\r\n  }\r\n  else if (isEqual(traits, [1, 0, 1])) {\r\n    return 'Golf'\r\n  }\r\n  else if (isEqual(traits, [1, 0, 0])) {\r\n    return 'Reading'\r\n  }\r\n  else if (isEqual(traits, [0, 1, 0])) {\r\n    return 'Cooking'\r\n  }\r\n  else if (isEqual(traits, [0, 1, 1])) {\r\n    return 'Dancing'\r\n  }\r\n  else if (isEqual(traits, [0, 0, 0])) {\r\n    return 'Yoga'\r\n  }\r\n  \r\n  else {\r\n    return 'Photography'\r\n  }\r\n\r\n}\r\n","C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\HomePage.js",["46","47","48"],"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\services\\Firestore.js",[],"C:\\Users\\derek\\git\\hobbyhub\\hobbyapp\\src\\components\\Question.js",["49","50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":3,"column":13,"nodeType":"58","messageId":"59","endLine":3,"endColumn":22},{"ruleId":"56","severity":1,"message":"61","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":5,"column":16,"nodeType":"58","messageId":"59","endLine":5,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":52,"column":17,"nodeType":"65","messageId":"66","endLine":52,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":54,"column":17,"nodeType":"65","messageId":"66","endLine":54,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":69,"column":7,"nodeType":"58","messageId":"59","endLine":69,"endColumn":12},{"ruleId":"56","severity":1,"message":"68","line":3,"column":16,"nodeType":"58","messageId":"59","endLine":3,"endColumn":23},{"ruleId":"63","severity":1,"message":"69","line":21,"column":18,"nodeType":"65","messageId":"66","endLine":21,"endColumn":20},{"ruleId":"63","severity":1,"message":"69","line":21,"column":33,"nodeType":"65","messageId":"66","endLine":21,"endColumn":35},{"ruleId":"56","severity":1,"message":"70","line":2,"column":17,"nodeType":"58","messageId":"59","endLine":2,"endColumn":26},{"ruleId":"56","severity":1,"message":"71","line":7,"column":11,"nodeType":"58","messageId":"59","endLine":7,"endColumn":23},{"ruleId":"56","severity":1,"message":"72","line":8,"column":10,"nodeType":"58","messageId":"59","endLine":8,"endColumn":15},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Firestore' is defined but never used.","'Question' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hobby' is assigned a value but never used.","'NavLink' is defined but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'questionText' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]